0 info it worked if it ends with ok
1 verbose cli [ 'C:\\Program Files\\nodejs\\node.exe',
1 verbose cli   'C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'publish',
1 verbose cli   './' ]
2 info using npm@3.10.10
3 info using node@v6.10.1
4 verbose publish [ './' ]
5 silly cache add args [ './', null ]
6 verbose cache add spec ./
7 silly cache add parsed spec Result {
7 silly cache add   raw: './',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: './',
7 silly cache add   spec: 'C:\\anything\\social-module',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory C:\Users\LenKunZ\AppData\Roaming\npm-cache\lz-social-module\0.1.4\package.tgz not in flight; packing
9 verbose correctMkdir C:\Users\LenKunZ\AppData\Roaming\npm-cache correctMkdir not in flight; initializing
10 info lifecycle lz-social-module@0.1.4~prepublish: lz-social-module@0.1.4
11 silly lifecycle lz-social-module@0.1.4~prepublish: no script for prepublish, continuing
12 verbose tar pack [ 'C:\\Users\\LenKunZ\\AppData\\Roaming\\npm-cache\\lz-social-module\\0.1.4\\package.tgz',
12 verbose tar pack   'C:\\anything\\social-module' ]
13 verbose tarball C:\Users\LenKunZ\AppData\Roaming\npm-cache\lz-social-module\0.1.4\package.tgz
14 verbose folder C:\anything\social-module
15 verbose addLocalTarball adding from inside cache C:\Users\LenKunZ\AppData\Roaming\npm-cache\lz-social-module\0.1.4\package.tgz
16 verbose correctMkdir C:\Users\LenKunZ\AppData\Roaming\npm-cache correctMkdir not in flight; initializing
17 silly cache afterAdd lz-social-module@0.1.4
18 verbose afterAdd C:\Users\LenKunZ\AppData\Roaming\npm-cache\lz-social-module\0.1.4\package\package.json not in flight; writing
19 verbose correctMkdir C:\Users\LenKunZ\AppData\Roaming\npm-cache correctMkdir not in flight; initializing
20 verbose afterAdd C:\Users\LenKunZ\AppData\Roaming\npm-cache\lz-social-module\0.1.4\package\package.json written
21 silly publish { name: 'lz-social-module',
21 silly publish   version: '0.1.4',
21 silly publish   description: 'Social chat module as service replacement.',
21 silly publish   main: 'index.js',
21 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
21 silly publish   author: { name: 'Rapeapach Suwasri', email: 'LenKunZ' },
21 silly publish   license: 'MIT',
21 silly publish   dependencies:
21 silly publish    { crypto: '0.0.3',
21 silly publish      'form-urlencoded': '^1.5.0',
21 silly publish      'promise-polyfill': '^6.0.2',
21 silly publish      request: '^2.81.0',
21 silly publish      urijs: '^1.18.10' },
21 silly publish   readme: '# Facebook and LINE module for notification service\r\nThis module made for sending and handle messenger service of Facebook and LINE without other purpose. \r\n\r\n** Usage of header signature verification is not guaranteed. Because some NodeJS framework (like express.js) modify the request body before library can access to it. **\r\n\r\n## Table of Contents\r\n\r\n<!-- TOC -->\r\n\r\n- [Facebook and LINE module for notification service](#facebook-and-line-module-for-notification-service)\r\n    - [Table of Contents](#table-of-contents)\r\n    - [Overview](#overview)\r\n    - [Requirement](#requirement)\r\n    - [Installation](#installation)\r\n    - [Service module initialize](#service-module-initialize)\r\n        - [Facebook service](#facebook-service)\r\n        - [LINE service](#line-service)\r\n    - [Link app user to messenger API](#link-app-user-to-messenger-api)\r\n        - [Redirect user to initialize the process](#redirect-user-to-initialize-the-process)\r\n        - [Send login button to user\'s messenger - only for **Facebook**](#send-login-button-to-users-messenger---only-for-facebook)\r\n        - [Get permanent user message **Chatbox ID**](#get-permanent-user-message-chatbox-id)\r\n            - [Facebook](#facebook)\r\n            - [LINE](#line)\r\n    - [Send the message](#send-the-message)\r\n        - [Message sending Facebook service](#message-sending-facebook-service)\r\n        - [Message sending for Line service](#message-sending-for-line-service)\r\n    - [Webhook handling](#webhook-handling)\r\n        - [Facebook webhook handling](#facebook-webhook-handling)\r\n            - [Endpoint confirmation](#endpoint-confirmation)\r\n            - [General Facebook webhook handle](#general-facebook-webhook-handle)\r\n        - [LINE webhook handling](#line-webhook-handling)\r\n            - [General LINE webhook handle](#general-line-webhook-handle)\r\n\r\n<!-- /TOC -->\r\n\r\n## Overview\r\nThis module can be normally called like normal node module.\r\nIt was not bundled with webpack or other bundler script.\r\n\r\n```javascript\r\nvar service = require(\'lz-social-module\');\r\n```\r\n\r\n## Requirement\r\n\r\nIt is general NodeJS module which is not bundled with any bundler script and not using ES 2015 code style.\r\n\r\nWe use Promise polyfill to make it support node 4.x and keep the code readible.\r\n\r\n## Installation\r\n\r\n```bash\r\nnpm install lz-social-module --save\r\n```\r\n\r\n## Service module initialize\r\n\r\n### Facebook service\r\n\r\nTo initialize Facebook module you only need to create instance by following code.\r\n\r\n```javascript\r\nvar service = require(\'lz-social-module\');\r\nvar FB = new service.Facebook({\r\n    webhookToken: "Facebook webhook token using to verify the webhook.",\r\n    accountLinkUrl: "This is url that will be using as callback when user click on account_link message.",\r\n    pageToken: "Access token for facebook page.",\r\n    appSecret: "Secret key for chat app",\r\n    pageUsername: "Username of facebook page."\r\n});\r\n```\r\n\r\nAll option properties are required. You must provide all of them.\r\n\r\n### LINE service\r\n\r\nTo initialize LINE module you only need to create instance by following code.\r\n\r\n```javascript\r\nvar service = require(\'lz-social-module\');\r\nvar LINE = new service.Line({\r\n    callbackUrl: "Callback for redirect user to web.",\r\n    botSecret: "Secret key of bot channel.",\r\n    botToken: "Access token of bot channel.",\r\n    loginChannelId: "Id of LINE login channel.",\r\n    loginChannelSecret: "Secret key of LINE login channel."\r\n});\r\n```\r\n\r\nAll option properties are required. You must provide all of them.\r\n\r\n## Link app user to messenger API\r\n\r\nFor **LINE**/**Facebook**\r\n\r\nThe simplest way to sync your service with messenger API is to handle the **webhook**.\r\n\r\nThis module was designed to handle those process to link app\'s account with messenger API. So you can simply adapt our process to your app structure.\r\nIt was only compatible with ***NodeJS HTTP request style*** (e.g. Express.js)\r\n\r\n### Redirect user to initialize the process\r\n\r\nBoth **LINE** and **Facebook** require user to follow specific generated URL to let it know that user allow the service to message them. Which called **Entry Point**.\r\n\r\nYou can get **Entry Point** URL by call these functions.\r\n\r\n```javascript\r\n// For Facebook\r\nvar facebookEntryURL = FB.auth.entryURL(state);\r\n// For LINE\r\nvar lineEntryURL = LINE.auth.entryURL(state);\r\n```\r\n\r\nWhen **state** is the *string* that can use for identify the user to app in a specific period of time.\r\n\r\n*Permanent **state** string is not recommended for security reason.*\r\n\r\n### Send login button to user\'s messenger - only for **Facebook**\r\n\r\nAfter user followed the **Entry Point** URL Facebook will send **OPEN_THREAD** webhook to where you set it in Facebook developer app console.\r\n\r\nThe service implements function that can handles the process. But you need to give it a HTTP request object. (mostly called as **req** in express.js and Node HTTP module)\r\n\r\n```javascript\r\napp.post(\'<webhook_endpoint>\', function(req, res, next){\r\n    var data = FB.webhook.callbackPOST(req);\r\n    \r\n    if(data === false){\r\n        return res.status(422).send(\'input not revalent\');\r\n    }\r\n\r\n    data.forEach(function(data){\r\n        var state = data.state;\r\n        \r\n        // If you decied not to send login message you can use user bellow to send message.\r\n        // But it will not be permanent.\r\n        var user = data.user;\r\n        var userId = user.id;\r\n\r\n        // You need to send login link to user.\r\n        // By calling this function.\r\n        FB.message.accountLink(user, state, "Please click this to login", function(){\r\n            // After account_link message sent.\r\n            next();\r\n        });\r\n    })\r\n})\r\n```\r\n\r\n### Get permanent user message **Chatbox ID** \r\n\r\n- For **Facebook** this will happens after user click the login link.\r\n- For **LINE** this will happens after user login after followed the **Entry Point URL**.\r\n\r\n#### Facebook\r\n\r\n```javascript\r\n// This will be a normal webpage\r\napp.get(\'<path_to_callback_url_in_option>\', function(req, res, next){\r\n    FB.auth.callback(req, function(err, data){\r\n        if(err){\r\n            return res.status(500).send("There is an error");\r\n        }\r\n\r\n        var state = data.state;\r\n\r\n        // User using to send the message\r\n        var user = data.user;\r\n        var userId = user.id;\r\n\r\n        // You must redirect user to this url to finish the process\r\n        var redirect = data.redirectURL;\r\n\r\n        next();\r\n    });\r\n});\r\n```\r\n\r\n#### LINE\r\n\r\n```javascript\r\napp.get(\'<path_to_callback_url_in_option>\', function(req, res, next){\r\n    LINE.auth.callback(req, function(err, data){\r\n        if(err){\r\n            return res.status(500).send("There is an error");\r\n        }\r\n\r\n        var state = data.state;\r\n\r\n        // User using to send the message\r\n        var user = data.user;\r\n        var userId = user.id;\r\n\r\n        next();\r\n    });\r\n});\r\n```\r\n\r\n## Send the message\r\n\r\nTo send message to user. The service need user object which has following structure.\r\n\r\n```json\r\n{\r\n    "id": "user or channel id"\r\n}\r\n```\r\n\r\n### Message sending Facebook service\r\n\r\n```javascript\r\nFB.message.text(user, "Hello, World!", function(err){\r\n    // When message were send.\r\n});\r\n```\r\n\r\n### Message sending for Line service\r\n\r\n```javascript\r\nLINE.message.text(user, "Hello, World", function(err){\r\n    // When message were send.\r\n});\r\n```\r\n\r\n## Webhook handling\r\n\r\n### Facebook webhook handling\r\n\r\n#### Endpoint confirmation\r\n\r\nTo use **Facebook** webhook. It requires the service to confirm its status by sending ***GET** request* to webhook endpoint\r\nwhich contains **secret token**. You need to provide the **secret token** in **options.webhookToken**.\r\n\r\nYou can implements manually by accepts all the request or using service function to handle it.\r\n\r\n```javascript\r\napp.get(\'<webhook_endpoint>\', function(req, res){\r\n    var result = FB.webhook.callbackGET(req);\r\n    if(result === false){\r\n        return res.status(401, "request is invalid");\r\n    }\r\n\r\n    return res.status(200).send(result);\r\n});\r\n```\r\n\r\n#### General Facebook webhook handle\r\n\r\nThis service only handle the webhook specific to the its function. \r\nYou can also handle it manually to get other webhook. This service contains the webhook filter that can filter some of webhook that not for your app.\r\n\r\n```javascript\r\napp.post(\'<webhook_endpoint>\', function(req, res, next){\r\n    if(!FB.webhook.webhookFilter(req)){\r\n        return res.status(401, "request is invalid");\r\n    }\r\n\r\n    return next();\r\n});\r\n```\r\n\r\n### LINE webhook handling\r\n\r\n#### General LINE webhook handle\r\nBy general LINE webhook handler will only filter the webhook and let all webhook pass.\r\n```javascript\r\napp.post(\'<webhook_endpoint>\', function(req, res, next){\r\n    var data = LINE.webhook.callbackPOST(req)\r\n    \r\n    if(data === false){\r\n        return res.status(422).send(\'input not revalent\');\r\n    }\r\n\r\n    next();\r\n})\r\n```\r\n\r\nYou can also handle it manually to get other webhook. This service contains the webhook filter that can filter some of webhook that not for your app.\r\n\r\n```javascript\r\napp.post(\'<webhook_endpoint>\', function(req, res, next){\r\n    if(!LINE.webhook.webhookFilter(req)){\r\n        return res.status(401, "request is invalid");\r\n    }\r\n\r\n    return next();\r\n});\r\n```\r\n\r\n',
21 silly publish   readmeFilename: 'README.md',
21 silly publish   gitHead: '2a8484b561b95b02eac9e7e976e141e1922ef4ef',
21 silly publish   _id: 'lz-social-module@0.1.4',
21 silly publish   _shasum: 'fca528f3ed30c0b68bc68d356f04833ee5b5ff49',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name lz-social-module
24 silly mapToRegistry using default registry
25 silly mapToRegistry registry https://registry.npmjs.org/
26 silly mapToRegistry data Result {
26 silly mapToRegistry   raw: 'lz-social-module',
26 silly mapToRegistry   scope: null,
26 silly mapToRegistry   escapedName: 'lz-social-module',
26 silly mapToRegistry   name: 'lz-social-module',
26 silly mapToRegistry   rawSpec: '',
26 silly mapToRegistry   spec: 'latest',
26 silly mapToRegistry   type: 'tag' }
27 silly mapToRegistry uri https://registry.npmjs.org/lz-social-module
28 verbose publish registryBase https://registry.npmjs.org/
29 silly publish uploading C:\Users\LenKunZ\AppData\Roaming\npm-cache\lz-social-module\0.1.4\package.tgz
30 verbose request uri https://registry.npmjs.org/lz-social-module
31 verbose request sending authorization for write operation
32 info attempt registry request try #1 at 1:37:11 AM
33 verbose request using bearer token for auth
34 verbose request id d22f827897d4ad41
35 http request PUT https://registry.npmjs.org/lz-social-module
36 http 403 https://registry.npmjs.org/lz-social-module
37 verbose headers { 'content-type': 'application/json',
37 verbose headers   'cache-control': 'max-age=300',
37 verbose headers   'content-length': '95',
37 verbose headers   'accept-ranges': 'bytes',
37 verbose headers   date: 'Sat, 08 Apr 2017 18:37:14 GMT',
37 verbose headers   via: '1.1 varnish',
37 verbose headers   connection: 'keep-alive',
37 verbose headers   'x-served-by': 'cache-sin18023-SIN',
37 verbose headers   'x-cache': 'MISS',
37 verbose headers   'x-cache-hits': '0',
37 verbose headers   'x-timer': 'S1491676633.279812,VS0,VE956',
37 verbose headers   vary: 'Accept-Encoding' }
38 verbose request invalidating C:\Users\LenKunZ\AppData\Roaming\npm-cache\registry.npmjs.org\lz-social-module on PUT
39 error publish Failed PUT 403
40 verbose stack Error: "You cannot publish over the previously published version 0.1.4." : lz-social-module
40 verbose stack     at makeError (C:\Users\LenKunZ\AppData\Roaming\nvm\v6.10.1\node_modules\npm\node_modules\npm-registry-client\lib\request.js:302:12)
40 verbose stack     at CachingRegistryClient.<anonymous> (C:\Users\LenKunZ\AppData\Roaming\nvm\v6.10.1\node_modules\npm\node_modules\npm-registry-client\lib\request.js:290:14)
40 verbose stack     at Request._callback (C:\Users\LenKunZ\AppData\Roaming\nvm\v6.10.1\node_modules\npm\node_modules\npm-registry-client\lib\request.js:210:14)
40 verbose stack     at Request.self.callback (C:\Users\LenKunZ\AppData\Roaming\nvm\v6.10.1\node_modules\npm\node_modules\request\request.js:187:22)
40 verbose stack     at emitTwo (events.js:106:13)
40 verbose stack     at Request.emit (events.js:191:7)
40 verbose stack     at Request.<anonymous> (C:\Users\LenKunZ\AppData\Roaming\nvm\v6.10.1\node_modules\npm\node_modules\request\request.js:1048:10)
40 verbose stack     at emitOne (events.js:96:13)
40 verbose stack     at Request.emit (events.js:188:7)
40 verbose stack     at IncomingMessage.<anonymous> (C:\Users\LenKunZ\AppData\Roaming\nvm\v6.10.1\node_modules\npm\node_modules\request\request.js:969:12)
41 verbose statusCode 403
42 verbose pkgid lz-social-module
43 verbose cwd C:\anything\social-module
44 error Windows_NT 10.0.14393
45 error argv "C:\\Program Files\\nodejs\\node.exe" "C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "publish" "./"
46 error node v6.10.1
47 error npm  v3.10.10
48 error code E403
49 error "You cannot publish over the previously published version 0.1.4." : lz-social-module
50 error If you need help, you may report this error at:
50 error     <https://github.com/npm/npm/issues>
51 verbose exit [ 1, true ]
